package com.chatapp.config;  
  
import io.jsonwebtoken.Claims;  
import io.jsonwebtoken.Jwts;  
import org.springframework.http.HttpHeaders;  
import org.springframework.http.server.reactive.ServerHttpRequest;  
import org.springframework.stereotype.Component;  
import org.springframework.web.server.ServerWebExchange;  
import org.springframework.web.server.WebFilter;  
import org.springframework.web.server.WebFilterChain;  
import reactor.core.publisher.Mono;  
  
@Component  
public class JwtAuthenticationFilter implements WebFilter {  
  
    private static final String SECRET_KEY = "your_secret_key";  
  
    @Override  
    public Mono<Void> filter(ServerWebExchange exchange, WebFilterChain chain) {  
        ServerHttpRequest request = exchange.getRequest();  
        String token = request.getHeaders().getFirst(HttpHeaders.AUTHORIZATION);  
  
        if (token != null && token.startsWith("Bearer ")) {  
            token = token.substring(7);  
            Claims claims = Jwts.parser()  
                    .setSigningKey(SECRET_KEY)  
                    .parseClaimsJws(token)  
                    .getBody();  
            exchange.getAttributes().put("claims", claims);  
        }  
  
        return chain.filter(exchange);  
    }  
}  
